User
	id: int
		numerical ID of the user
	
	parcels {Pid}
		array of parcel IDs
	
	friends {status, uID}
		array of structs:	status: char	// if friend is confirmed or not, this dictates whether we can initiate a transaction with the specified friend (0=confirmed, 1=request sent, 2=request received)
					id: int		// id of friend
	
	courier: bool
		indicates whether the user has opted to be able to be used as an intermediary courier
	
	lat: double
		the user's current latitude
	
	lng: double
		the user's current longitude
	
	rating: int
		user's current rating
	
	ratable {uID}
		array of user IDs that the user is allowed to rate. After a transaction involving an user (as sender, receiver, or courier), their ID is added to this array. When rating a user, the first instance of their ID is removed from this array.
	
	requestFriend(uID)
		A sends this to B, A adds B to friends with status 1, B adds A to friends with status 2
	acceptFriend(uID)
		A sends this to a friend B with status 2, changes status of A's friend B and B's friend A to 0
	denyFriend(uID)
		A sends this to a friend B with status 2, removes B from A's friends and A from B's friends
	
	requestRendezvous(pID)
		A sends a parcel (status=0 or 3) to B with the proposed date and time saved to the parcel, if pID.status!=3 then parcel is added to B's parcels, sets parcel status to 1
	cancelRendezvous(pID)
		A sends a parcel (status=1) to B. Parcel status set to 0 if parcel.source==parcel.carrier, 3 otherwise
	acceptRendezvous(pID)
		A sends a parcel (status=1) to B. Parcel status is set to 2.
	
	finalizeExchange(pID)
		A (carrier) sends a parcel (status=2) to B (next recipient). pID.carrier = B.id. If B.id!=pID.destination, set status=3 else 4. If B.id!=pID.destination, B must call pID.destination->requestRendezvous(pID)
	
	initiateCourier(pID) -> uID
		A sends a parcel (status=0) to B. pID is added to B.parcels. Returns uID of closest mutual friend. A must then call uID->requestRendezvous(pID)
	
	isFriendWith(uID) -> bool
		Sent from A to B. Return true if uID is a member of B.friends

Parcel
	id: int
		numerical ID of the parcel
	status: char
		0=uninitiated, 1=rendezvous requested, 2=rendezvous accepted, 3=with courier, 4=completed
	destination: int
		user ID of the final recipient
	source: int
		user ID of the sender
	carrier: int
		user ID of the current holder of the parcel
	lat: double
		the parcel's current latitude
	lng: double
		the parcel's current longitude
	time: int
		the UNIX timestamp of the parcel's next rendezvous